services:
  app:
    build: .
    ports:
      - "8080:8080"
    environment:
      - REDIS_ADDR=redis:6379
      - REDIS_PASSWORD=${REDIS_PASSWORD:-}
      - PORT=8080
      - HOST=0.0.0.0
      - MAX_FILE_SIZE=104857600  # 100MB
      - MAX_FILES_PER_USER=1000
      - COMPRESSION_LEVEL=6
      - REQUEST_TIMEOUT=30s
      - REDIS_POOL_SIZE=20
      - MAX_CONCURRENT_UPLOADS=10
    depends_on:
      redis:
        condition: service_healthy
    restart: unless-stopped
    networks:
      - file-storage-network
    volumes:
      - ./logs:/app/logs
      - app_temp:/app/temp
      - app_files:/app/temp/files
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:8080/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    deploy:
      resources:
        limits:
          cpus: '1.0'
          memory: 512M
        reservations:
          cpus: '0.5'
          memory: 256M
    security_opt:
      - no-new-privileges:true
    read_only: true
    tmpfs:
      - /tmp

  redis:
    image: redis:7-alpine
    command: >
      redis-server
      --save 60 1
      --loglevel warning
      --maxmemory 512mb
      --maxmemory-policy allkeys-lru
      --tcp-keepalive 300
      --timeout 0
      --tcp-backlog 511
      --maxclients 1000
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    restart: unless-stopped
    networks:
      - file-storage-network
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 30s
    deploy:
      resources:
        limits:
          cpus: '0.5'
          memory: 512M
        reservations:
          cpus: '0.2'
          memory: 256M
    security_opt:
      - no-new-privileges:true

  # Optional: Add nginx reverse proxy for production
  nginx:
    image: nginx:alpine
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
      - ./ssl:/etc/nginx/ssl:ro
    depends_on:
      - app
    restart: unless-stopped
    networks:
      - file-storage-network
    deploy:
      resources:
        limits:
          cpus: '0.5'
          memory: 128M
        reservations:
          cpus: '0.1'
          memory: 64M

volumes:
  redis_data:
    driver: local
  app_temp:
    driver: local
  app_files:
    driver: local

networks:
  file-storage-network:
    driver: bridge
    ipam:
      config:
        - subnet: 172.20.0.0/16